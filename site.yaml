---
- name: Setup Laravel Application Server
  hosts: laravel
  become: true

  vars:
    php_version: "8.3"
    project_dir: "/var/www/sayapatri-backend"
    repo_url: "https://github.com/Ek-Ra-Sunya/sayapatri-backend.git"
    github_user: "{{ lookup('env','GITHUB_USER') }}"
    github_token: "{{ lookup('env','GITHUB_TOKEN') }}"
    nginx_conf: "/etc/nginx/sites-available/laravel"
    nginx_server_name: "admin.sayapatri.store"
    certbot_email: "your-email@example.com"

  tasks:
    # -----------------
    # System Updates
    # -----------------
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: safe
        cache_valid_time: 3600

    - name: Install base packages
      apt:
        name:
          - software-properties-common
          - ca-certificates
          - lsb-release
          - apt-transport-https
          - unzip
          - git
          - acl
        state: present

    # -----------------
    # PHP Setup
    # -----------------
    - name: Add ondrej/php PPA
      apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Install PHP and extensions
      apt:
        name:
          - "php{{ php_version }}"
          - "php{{ php_version }}-cli"
          - "php{{ php_version }}-common"
          - "php{{ php_version }}-mysql"
          - "php{{ php_version }}-xml"
          - "php{{ php_version }}-mbstring"
          - "php{{ php_version }}-bcmath"
          - "php{{ php_version }}-curl"
          - "php{{ php_version }}-gd"
          - "php{{ php_version }}-zip"
          - "php{{ php_version }}-fpm"
        state: present
        update_cache: yes

    # -----------------
    # Composer Setup
    # -----------------
    - name: Install composer globally
      get_url:
        url: https://getcomposer.org/composer-stable.phar
        dest: /usr/local/bin/composer
        mode: '0755'

    # -----------------
    # Clone Laravel Repo
    # -----------------
    - name: Ensure /var/www exists
      file:
        path: /var/www
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Clone Laravel project
      git:
        repo: "https://{{ github_user }}:{{ github_token }}@{{ repo_url | regex_replace('^https://', '') }}"
        dest: "{{ project_dir }}"
        version: main
        force: yes

    - name: Create storage subdirectories
      file:
        path: "{{ project_dir }}/storage/framework/{{ item }}"
        state: directory
        mode: '0775'
        owner: www-data
        group: www-data
      loop:
        - cache
        - data
        - sessions
        - views

    # -----------------
    # Ownership & Permissions
    # -----------------
    - name: Ensure correct ownership for Laravel project
      file:
        path: "{{ project_dir }}"
        owner: www-data
        group: www-data
        recurse: yes

    - name: Set proper permissions on directories
      file:
        path: "{{ project_dir }}"
        recurse: yes
        mode: "u=rwX,g=rwX,o=rX"

    # -----------------
    # Laravel Setup
    # -----------------
    - name: Install PHP dependencies with Composer
      community.general.composer:
        command: install
        working_dir: "{{ project_dir }}"
        no_dev: true
        optimize_autoloader: true
        prefer_dist: true
        executable: composer
      become_user: www-data

    - name: Upload Laravel .env file from template
      template:
        src: templates/.env.j2
        dest: "{{ project_dir }}/.env"
        owner: www-data
        group: www-data
        mode: '0664'

    - name: Run Laravel migrations (remote DB)
      command: php artisan migrate --force
      args:
        chdir: "{{ project_dir }}"
      become_user: www-data

    - name: Install MySQL client
      apt:
        name: default-mysql-client
        state: present
        update_cache: yes

    - name: Check if admin user exists
      command: >
        mysql -h {{ db_host }}
        -u {{ db_user }}
        -p{{ db_pass }}
        -D {{ db_name }}
        -N -s -e "SELECT COUNT(*) FROM users WHERE email='{{ admin_email }}';"
      register: admin_user_count
      changed_when: false

    - name: Run Laravel seeders (remote DB)
      command: php artisan db:seed --force
      args:
        chdir: "{{ project_dir }}"
      become_user: www-data
      when: admin_user_count.stdout == "0"

    # -----------------
    # Nginx + Certbot Setup
    # -----------------
    - name: Install nginx and certbot
      apt:
        name:
          - nginx
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: Configure nginx for Laravel
      copy:
        dest: "{{ nginx_conf }}"
        content: |
          server {
              server_name {{ nginx_server_name }};

              root {{ project_dir }}/public;
              index index.php index.html index.htm;

              location / {
                  try_files $uri $uri/ /index.php?$query_string;
              }

              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php{{ php_version }}-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }

              location ~ /\.ht {
                  deny all;
              }
          }
      notify: restart nginx

    - name: Enable nginx site
      file:
        src: "{{ nginx_conf }}"
        dest: /etc/nginx/sites-enabled/laravel
        state: link
        force: true

    - name: Obtain SSL certificate via Certbot
      command: certbot --nginx -d {{ nginx_server_name }} --non-interactive --agree-tos -m {{ certbot_email }}
      args:
        creates: /etc/letsencrypt/live/{{ nginx_server_name }}/fullchain.pem
      notify: restart nginx

    # -----------------
    # Final Permissions Fix
    # -----------------
    - name: Ensure storage and cache writable
      file:
        path: "{{ project_dir }}/{{ item }}"
        mode: '0775'
        recurse: yes
        owner: www-data
        group: www-data
      loop:
        - storage
        - bootstrap/cache

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart php-fpm
      service:
        name: "php{{ php_version }}-fpm"
        state: restarted
        enabled: true
